{"version":3,"sources":["background.png","logo_smreina.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","config","require","App","state","newvisit","visits","handleAddVisit","event","a","preventDefault","params","Nombre","Email","Celular","Plataforma","axios","post","api","invokeUrl","setState","console","log","onAddNameChange","target","value","onAddEmailChange","onAddPhoneChange","onAddPlatformChange","className","onSubmit","data-validate","id","type","name","placeholder","this","onChange","required","trigger","closeOnDocumentClick","modal","position","style","backgroundImage","bg","src","logoSmreina","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.da709bf5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.9cbad1d1.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_smreina.12da53fe.png\";","import React, { Component } from 'react';\nimport Popup from 'reactjs-popup';\nimport bg from './background.png';\nimport logoSmreina from './logo_smreina.png';\nimport './App.css';\nimport axios from \"axios\";\nconst config = require('./config.json');\n\n\nclass App extends Component {\n\n  state = {\n    newvisit : {      \n      \"Nombre\": \"\",\n      \"Email\": \"\",\n      \"Celular\": \"\",\n      \"Plataforma\": \"\"\n    },\n    visits: []\n  }\n\n  handleAddVisit = async(event) => {\n    event.preventDefault();\n\n    try {\n      const params = {\n        \"Nombre\": this.state.newvisit.Nombre,\n        \"Email\": this.state.newvisit.Email,\n        \"Celular\": this.state.newvisit.Celular,\n        \"Plataforma\": this.state.newvisit.Plataforma\n      };\n      await axios.post(`${config.api.invokeUrl}`, params);\n      this.setState({ visits: [...this.state.visits, this.state.newvisit] });\n      this.setState({ newvisit: {\"Nombre\": \"\", \"Email\": \"\", \"Celular\": \"\", \"Plataforma\": \"\"} });\n\n    } catch (err) {\n      console.log(`An error has ocurred: ${err}`);\n    }\n  }\n\n  onAddNameChange = event => this.setState({ newvisit: { ...this.state.newvisit, \"Nombre\": event.target.value } });\n  onAddEmailChange = event => this.setState({ newvisit: { ...this.state.newvisit, \"Email\": event.target.value } });\n  onAddPhoneChange = event => this.setState({ newvisit: { ...this.state.newvisit, \"Celular\": event.target.value } });\n  onAddPlatformChange = event => this.setState({ newvisit: { ...this.state.newvisit, \"Plataforma\": event.target.value } });\n\n\n  render() {\n  return (\n    <div className=\"container-contact100\">\n\t\t  <div className=\"wrap-contact100\">\n\n    <form onSubmit = {event => this.handleAddVisit(event)} className=\"contact100-form validate-form\">\n\t\t\t\t<span className=\"contact100-form-title\">\n\t\t\t\t\t¿ Estarías interesado en recibir la Visita Misionera Virtual desde la comodidad de tu hogar? <br />Llena el siguiente formulario para agendar nuestra visita.\n\t\t\t\t</span>\n\n\t\t\t\t<label className=\"label-input100\">Escribe tu nombre completo</label>\n\t\t\t\t<div className=\"wrap-input100 validate-input\" data-validate=\"Tu nombre aquí\">\n          <input \n              id=\"first-name\" \n              className=\"input100\" \n              type=\"text\" name=\"Nombre\" \n              placeholder=\"Tu nombre aquí\"\n              value={this.state.newvisit.Nombre}\n              onChange={this.onAddNameChange}\n              required \n          />\n\t\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<label className=\"label-input100\">Escribe tu correo electrónico</label>\n\t\t\t\t<div className=\"wrap-input100 validate-input\" data-validate = \"Direccion de correo debe ser valida\">\n          <input \n              id=\"email\" \n              className=\"input100\" \n              type=\"email\" \n              name=\"Email\" \n              placeholder=\"Tu correo electrónico aquí\"\n              value={this.state.newvisit.Email}\n              onChange={this.onAddEmailChange}\n              required \n          />\n\t\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t\t</div>\n\n\t\t\t\t<label className=\"label-input100\">Escribe tu numero de contacto</label>\n\t\t\t\t<div className=\"wrap-input100\">\n          <input \n              id=\"phone\" \n              className=\"input100\" \n              type=\"phone\" \n              name=\"Celular\" \n              placeholder=\"Tu numero de celular aquí\"\n              value={this.state.newvisit.Celular}\n              onChange={this.onAddPhoneChange}\n              required \n          />\n\t\t\t\t\t<span className=\"focus-input100\"></span>\n\t\t\t\t</div>\n\n        <label className=\"label-input100\">Cuál plataforma para videollamadas sueles usar?</label>\n        <div className=\"wrap-input100 validate-input\" data-validate = \"Debes seleccionar una de las opciones\">\n          <input type=\"radio\" id=\"zoom\" name=\"Plataforma\" value=\"Zoom\" onChange={this.onAddPlatformChange} />\n          <label>&nbsp;&nbsp;Zoom</label><br />\n          <input type=\"radio\" id=\"facebook\" name=\"Plataforma\" value=\"Facebook\" onChange={this.onAddPlatformChange} />\n          <label>&nbsp;&nbsp;Facebook</label><br />\n          <input type=\"radio\" id=\"meet\" name=\"Plataforma\" value=\"Google Meet\" onChange={this.onAddPlatformChange} />\n          <label>&nbsp;&nbsp;Google Meet</label><br />\n          <input type=\"radio\" id=\"whatsapp\" name=\"Plataforma\" value=\"Whatsapp\" onChange={this.onAddPlatformChange} />\n          <label>&nbsp;&nbsp;Whatsapp</label><br />\n          <input type=\"radio\" id=\"other\" name=\"Plataforma\" value=\"Otra\" onChange={this.onAddPlatformChange} />\n          <label>&nbsp;&nbsp;Otra</label><br />\n\n        </div>\t\t\t\n\n\t\t\t\t<div className=\"container-contact100-form-btn\">\n          <Popup\n            trigger={<button type=\"submit\" className=\"contact100-form-btn\">Enviar datos </button>}\n            closeOnDocumentClick\n            modal\n            position=\"bottom-center\"\n          >\n            <span className=\"confirm-data\">\n              Te agradecemos por llenar el formulario. \n              En proximos dias nos estaremos comunicando para agendar la Visita Misionera. <strong>GRACIAS!</strong>\n            </span>\n          </Popup>                   \n\t\t\t\t</div>\n        \n\t\t\t</form>            \n\n    <div className=\"contact100-more flex-col-c-m\" style={{ backgroundImage:`url(${bg})` }}>\n    <img src={ logoSmreina } alt=\"Logo Santa Maria Reina\" /><br />\n    <div className=\"flex-w size1 p-b-47\">\n      <div className=\"txt1 p-r-25\">\n        <span className=\"lnr lnr-book\"></span>\n      </div>\n\n      <div className=\"flex-col size2\">\n        <span className=\"txt1 p-b-20\">\n          <i>\"He aquí, yo estoy a la puerta y llamo; si alguno oye mi voz entraré y cenaré con él.\"\n          </i><br />Ap 3, 20 \n        </span>\n      </div>\n    </div>\n    <br />\n\n    <div className=\"dis-flex size1 p-b-47\">\n      <div className=\"txt1 p-r-25\">\n        <span className=\"lnr lnr-users\"></span>\n      </div>\n      <div className=\"flex-col size2\">\n        <span className=\"txt1 p-b-20\">\n          Te conectarás con 2 personas del Grupo Misionero\n        </span>        \n      </div>\n    </div>\n\n    <div className=\"dis-flex size1 p-b-47\">\n      <div className=\"txt1 p-r-25\">\n        <span className=\"lnr lnr-laptop-phone\"></span>\n      </div>\n\n      <div className=\"flex-col size2\">\n        <span className=\"txt1 p-b-20\">\n          En Modo Videollamada sin salir de tu hogar\n        </span>        \n      </div>\n    </div>\n\n    <div className=\"dis-flex size1 p-b-47\">\n      <div className=\"txt1 p-r-25\">\n        <span className=\"lnr lnr-calendar-full\"></span>\n      </div>\n\n      <div className=\"flex-col size2\">\n        <span className=\"txt1 p-b-20\">\n          Visita agendada previamente\n        </span>        \n      </div>\n    </div>\n\n    <div className=\"dis-flex size1 p-b-47\">\n      <div className=\"txt1 p-r-25\">\n        <span className=\"lnr lnr-clock\"></span>\n      </div>\n\n      <div className=\"flex-col size2\">\n        <span className=\"txt1 p-b-20\">\n          Tiempo estimado: 20 a 30 minutos\n        </span><br />        \n      </div>\n    </div>\n\n    </div>\n    </div>\n  </div>\n  );\n}\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}